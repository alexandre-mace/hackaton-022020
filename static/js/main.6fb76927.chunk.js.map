{"version":3,"sources":["components/Navigation.js","page/SearchPage.js","components/SearchedCard.js","page/LeaderBoard.js","page/challenge/FriendLink.js","page/challenge/FriendWaiting.js","page/challenge/StartChallenge.js","page/challenge/Question.js","page/challenge/Results.js","page/challenge/Quiz.js","page/challenge/Challenge.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","setCurrentPage","setSearch","className","onClick","width","height","src","useStyles","makeStyles","listbox","option","padding","paddingTop","paddingBottom","fullList","paper","borderTopLeftRadius","borderTopRightRadius","backgroundColor","color","minHeight","maxWidth","drawerRoot","SearchPage","onBoarding","setOnBoarding","firstOption","setFirstOption","secondOption","setSecondOption","search","classes","React","useState","bottom","state","setState","displayAutocomplete","setDisplayAutocomplete","currentActionSelection","setCurrentActionSelection","toggleDrawer","side","actionSelection","open","event","a","type","key","setTimeout","barData","labels","datasets","label","pollutionScore","borderWidth","data","title","xmlns","viewBox","id","x1","x2","y2","gradientUnits","offset","stopColor","stopOpacity","transform","data-name","d","fill","stroke","strokeWidth","fontSize","fontFamily","fontWeight","x","y","Button","disabled","variant","Drawer","root","anchor","onClose","role","Autocomplete","options","getOptionLabel","onChange","value","style","renderInput","params","TextField","fullWidth","defaultFontColor","legend","display","fontColor","tooltips","enabled","scales","xAxes","gridLines","yAxes","ticks","beginAtZero","min","text","SearchedCard","item","index","active","firstAction","secondAction","alt","LeaderBoard","props","searchedData","map","FriendLink","setChallengeStep","copy","document","execCommand","FriendWaiting","randomUsername","useEffect","timer","clearTimeout","StartChallenge","Question","question","setQuestionStep","questionCount","setGoodAnswers","friendUsername","goodAnswers","selected","setSelected","questionTimer","setQuestionTimer","showAnswerTimer","setShowAnswerTimer","interval","setInterval","clearInterval","step","answers","answer","isTrue","hasFriendAnswered","Results","setDisplayHeader","Quiz","setTimer","questionStep","questionData","length","Challenge","challengeStep","onChallengeStart","stepNumber","names","App","currentPage","displayHeader","firstOptionSelection","setFirstOptionSelection","secondOptionSelection","setSecondOptionSelection","Math","floor","random","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6fb76927.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({ setCurrentPage, setSearch }) => {\n    return (\n        <div className={\"top-navigation\"}>\n            <button className={\"logo\"} onClick={() => {\n                setCurrentPage(0)\n                setSearch(false)\n            }}>\n                <img width={46} height={39} src={\"assets/images/logo-colors.png\"}/>\n                <div className={\"logo-name\"}>EKO</div>\n            </button>\n            <div className={'nav-icons'}>\n                <div className={'nav-icon'} onClick={() => setCurrentPage(1)}>\n                    <img width={23} height={23} src={'assets/images/ic_cup.svg'} />\n                </div>\n                <div className={'nav-icon'} onClick={() => setCurrentPage(2)}>\n                    <img width={23} height={23} src={'./../assets/images/ic_fight.svg'} />\n                </div>\n                <div className={'nav-icon'} onClick={() => setCurrentPage(2)}>\n                    <img width={23} height={23} src={'./../assets/images/ic_menu.svg'} />\n                </div>\n            </div>\n        </div>\n    )\n};\nexport default Navigation;","import React, {useEffect, useState} from 'react';\nimport data from \"../data/data.json\";\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from '@material-ui/core/Button';\nimport {Bar} from 'react-chartjs-2';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\n\nconst useStyles = makeStyles({\n    listbox: {\n    },\n    option: {\n        padding: \"20px\",\n        paddingTop: \"0\",\n        paddingBottom: \"0\"\n    },\n    fullList: {\n        width: 'auto',\n    },\n    paper: {\n        borderTopLeftRadius: \"25px\",\n        borderTopRightRadius: \"25px\",\n        backgroundColor: \"#303136\",\n        color: \"white\",\n        padding: \"20px\",\n        paddingTop: \"50px\",\n        minHeight: \"80vh\",\n        maxWidth: \"100vw\"\n    },\n    drawerRoot: {\n    }\n});\n\nconst SearchPage = ({ onBoarding, setOnBoarding, firstOption, setFirstOption, secondOption, setSecondOption, search, setSearch, setCurrentPage }) => {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        bottom: false,\n    });\n    const [displayAutocomplete, setDisplayAutocomplete] = React.useState(false);\n    const [currentActionSelection, setCurrentActionSelection] = React.useState(null);\n\n    const toggleDrawer = (side, actionSelection, open) => async event => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        setCurrentActionSelection(actionSelection);\n\n        if (open) {\n            setState({ ...state, [side]: open });\n            setTimeout(() => {\n                setDisplayAutocomplete(!displayAutocomplete)\n            }, 180)\n        }\n        if (!open) {\n            setDisplayAutocomplete(!displayAutocomplete);\n            setTimeout(() => {\n\n                setState({ ...state, [side]: open });\n            }, 180)\n        }\n    };\n\n    const fullList = side => (\n        <div\n            className={classes.fullList + \" w-100\"}\n            role=\"presentation\"\n        >\n                {displayAutocomplete &&\n                    <>\n                    <div className={\"drawer-title\"}>\n                        - Sélectionnez l'item {currentActionSelection === 'first' ? \"1\" : \"2\"} -\n                    </div>\n                <Autocomplete\n                    id=\"combo-box-demo\"\n                    open={displayAutocomplete}\n                    classes={{\n                        option: classes.option,\n                        listbox: classes.listbox\n                    }}\n                    options={data}\n                    getOptionLabel={option => option.title}\n                    onChange={(event, value) => {\n                            if (currentActionSelection === \"first\") {\n                                setFirstOption(value);\n                                setDisplayAutocomplete(!displayAutocomplete);\n                                setState({ [\"bottom\"]: false });\n                            }\n                            if (currentActionSelection === \"second\") {\n                                setSecondOption(value);\n                                setDisplayAutocomplete(!displayAutocomplete);\n                                setState({ [\"bottom\"]: false });\n                            }\n                        }\n                    }\n                    style={{ width: 300 }}\n                    renderInput={params => (\n                        <TextField {...params} label=\"Tapez les 3 premières lettres...\" variant=\"outlined\" fullWidth />\n                    )}\n                />\n                </>\n                }\n        </div>\n    );\n\n    let barData = false;\n\n    if (search) {\n        barData = {\n            labels: [],\n            datasets: [\n                {\n                    label: 'My First dataset',\n                    backgroundColor: firstOption.pollutionScore > secondOption.pollutionScore ? \"#4B4A4A\" : \"#4CCE8D\",\n                    borderWidth: 1,\n                    data: [firstOption.pollutionScore * 10]\n                },\n                {\n                    label: 'My First dataset',\n                    backgroundColor: secondOption.pollutionScore > firstOption.pollutionScore ? \"#4B4A4A\" : \"#4CCE8D\",\n                    borderWidth: 1,\n                    data: [secondOption.pollutionScore * 10]\n                }\n            ]\n        };\n    }\n\n    return (\n        <>\n            <div className={onBoarding === true ? \"onboarding translateX\" : \"onboarding\"}>\n                <div className={\"onboarding-cross\"} onClick={() => setOnBoarding(true)}>\n                    &#10005;\n                </div>\n                <div className={\"onboarding-title\"}>\n                    Bienvenue sur EKO\n                </div>\n                <div className={\"onboarding-text\"}>\n                    Compare l'impact écologique de tes habitudes numériques.\n                </div>\n            </div>\n            {!search &&\n            <div className={\"search-wrapper\"}>\n                <div className={\"d-flex flex-column mb-3 align-items-center\"}>\n                    <div className={\"page-title\"}>Qui est le moins pire ?</div>\n                    <div className={\"page-description\"}>\n                        Sélectionner les items que vous souhaitez comparer dans la liste disponible.\n                    </div>\n                    <div className={\"select-button\"} onClick={toggleDrawer('bottom', \"first\", true)}>\n                        {firstOption ? firstOption.title : \"Séléctionner l'item 1\"}\n                    </div>\n                    <div className={\"text-center mt-3 mb-3\"}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"46.8\" height=\"36.6\" viewBox=\"0 0 46.8 36.6\">\n                            <defs>\n                                <linearGradient id=\"linear-gradient\" x1=\"0.5\" x2=\"0.5\" y2=\"1\" gradientUnits=\"objectBoundingBox\">\n                                    <stop offset=\"0\" stopColor=\"#ff9300\" stopOpacity=\"0.718\"/>\n                                    <stop offset=\"1\" stopColor=\"#ffce00\"/>\n                                </linearGradient>\n                            </defs>\n                            <g id=\"vs\" transform=\"translate(-148.2 -548.5)\">\n                                <path id=\"Icon_metro-lightning2\" data-name=\"Icon metro-lightning2\" d=\"M14.139,27.3l3.315,3.315-3.315,9.946,9.946-9.946L20.769,27.3l3.315-9.946L14.139,27.3Z\" transform=\"translate(153.225 537.831)\" fill=\"url(#linear-gradient)\"/>\n                                <text id=\"V\" transform=\"translate(149 577.3)\" fill=\"#fff\" stroke=\"#fff\" strokeWidth=\"0.8\" fontSize=\"30\" fontFamily=\"Raleway-Bold, Raleway\" fontWeight=\"700\"><tspan x=\"0\" y=\"0\">V</tspan></text>\n                                <text id=\"S\" transform=\"translate(176 577)\" fill=\"#fff\" fontSize=\"30\" fontFamily=\"Raleway-Bold, Raleway\" fontWeight=\"700\"><tspan x=\"0\" y=\"0\">S</tspan></text>\n                            </g>\n                        </svg>\n                    </div>\n                    <div className={\"select-button\"} onClick={toggleDrawer('bottom', \"second\", true)}>\n                        {secondOption ? secondOption.title : \"Sélectionner l'item 2\"}\n                    </div>\n                </div>\n                <div className={\"d-flex mt-auto justify-content-center w-100\"}>\n                    <div className={\"w-100\"}>\n                        <Button className={\"go-button\"} disabled={(!firstOption || !secondOption)} variant=\"contained\" color=\"primary\" onClick={() => setSearch(true)}>\n                            Go !\n                        </Button>\n                    </div>\n                </div>\n\n                <Drawer classes={{ paper: classes.paper, root: classes.drawerRoot}} anchor=\"bottom\" open={state.bottom} onClose={toggleDrawer('bottom', false)}>\n                    {fullList('bottom')}\n                </Drawer>\n            </div>\n            }\n            {search &&\n            <div className={\"search-wrapper d-flex flex-column align-items-center h-100\"}>\n                <div onClick={() => setCurrentPage(1)} className={\"arrow-back\"}><span className={\"arrow\"}>&#8592;</span> <span className={\"back\"}>Retour</span></div>\n                <div className={\"page-title\"}>Et le vainqueur est...</div>\n                    <div className={\"d-flex justify-content-center\"}>\n                        <div>\n                            <Bar\n                                data={barData}\n                                width={350}\n                                height={200}\n                                options={{\n                                    defaultFontColor: \"#fff\",\n                                    legend: {\n                                        display: false,\n                                        labels: {\n                                            fontColor: \"white\",\n                                            fontSize: 18\n                                        }\n                                    },\n                                    tooltips: {\n                                        enabled: false\n                                    },\n                                    scales: {\n                                        xAxes: [{\n                                            gridLines: {\n                                                display:false\n                                            },\n                                        }],\n                                        yAxes: [{\n                                            gridLines: {\n                                                display:false\n                                            },\n                                            ticks: {\n                                                beginAtZero: true,\n                                                min: 0,\n                                                display: false\n                                            }\n                                        }]\n                                    }\n                                }}\n                            />\n                        </div>\n                    </div>\n                <div className={\"d-flex justify-content-center\"}>\n                    <div className={\"result-action\"}>\n                        {firstOption.pollutionScore < secondOption.pollutionScore\n                            ? <img width={26} height={26} src={\"../assets/images/ic_cup-color.png\"} />\n                            : <img width={23} height={22} src={\"../assets/images/finger-color.png\"} />\n                        }\n                        <div>{firstOption.title}</div>\n                    </div>\n                    <div className={\"result-action\"}>\n                        {secondOption.pollutionScore < firstOption.pollutionScore\n                            ? <img width={26} height={26} src={\"../assets/images/ic_cup-color.png\"} />\n                            : <img width={23} height={22} src={\"../assets/images/finger-color.png\"} />\n                        }\n                        <div>{secondOption.title}</div>\n                    </div>\n                </div>\n                <div className={\"result-card mt-8\"}>\n                    <div className={\"result-card-title\"}>\n                        {secondOption.pollutionScore < firstOption.pollutionScore\n                            ? <img className={\"mr-1\"} width={26} height={26} src={\"../assets/images/ic_cup-color.png\"} />\n                            : <img className={\"mr-1\"} width={23} height={22} src={\"../assets/images/finger-color.png\"} />\n                        }\n                        {firstOption.title}\n                    </div>\n                    <div className={\"result-card-text\"}>{firstOption.text}</div>\n                </div>\n                <div className={\"result-card\"}>\n                    <div className={\"result-card-title\"}>\n                        {secondOption.pollutionScore > firstOption.pollutionScore\n                            ? <img className=\"mr-1\" width={26} height={26} src={\"../assets/images/ic_cup-color.png\"} />\n                            : <img className={\"mr-1\"} width={23} height={22} src={\"../assets/images/finger-white.png\"} />\n                        }\n                        {secondOption.title}\n                    </div>\n                    <div className={\"result-card-text\"}>{secondOption.text}</div>\n                </div>\n                <div>\n                    <div className={\"result-helper\"}>Et si il y avait mieux ?</div>\n                    <img className={\"mt-3\"} width={84} height={70} src={\"../assets/images/logo-colors.png\"} />\n                    <div className={\"result-helper-content\"}>\n                        <div className={\"result-helper-title\"}>Pour une meilleure alternative</div>\n                        <div className={\"result-helper-text\"}>On te conseille d'essayer Discord</div>\n                    </div>\n\n                </div>\n                <div className={\"d-flex mt-auto justify-content-center w-100\"}>\n                    <div className={\"w-100\"}>\n                        <Button className={\"go-button w-100 mt-3\"} variant=\"contained\" color=\"primary\" onClick={() => {\n                            setSearch(false)\n                            setFirstOption(null)\n                            setSecondOption(null)\n                        }}>\n                            Nouvelle recherche\n                        </Button>\n                    </div>\n                </div>\n            </div>\n\n            }\n        </>\n    )\n};\nexport default SearchPage;","import React, { useState } from 'react'\nimport '../assets/styles/searchedCard.css'\n\nconst SearchedCard = ({ item, index, setFirstOption, setSecondOption, setSearch, setCurrentPage }) => {\n  const [active, setActive] = useState(false)\n\n\n  return (\n    <div className='searchedcard'>\n      <button className='searchedcard__button' onClick={() => {\n        setFirstOption(item.firstAction)\n        setSecondOption(item.secondAction)\n        setSearch(true);\n        setCurrentPage(0);\n      }}>\n        <div className='searchedcard__wrapper'>\n          {!active && <span>{index + 1}</span>}\n          <p className='searchedcard__action'>{item.firstAction.title}</p>\n          <img src=\"./../assets/images/vs.png\" alt=\"\"/>\n          <p className='searchedcard__action'>{item.secondAction.title}</p>\n        </div>\n      </button>\n    </div>\n  )\n}\n\nexport default SearchedCard\n","import React from 'react'\nimport searchedData from '../data/searchedData.json'\nimport SearchedCard from '../components/SearchedCard'\nimport '../assets/styles/leaderBoard.css'\n\nconst LeaderBoard = (props) => {\n\n  return (\n    <div className='leaderboard'>\n    <div className={\"page-title w-100\"}>Vous êtes nombreux à comparer...</div>\n      {searchedData.map((item, index) => (\n        <SearchedCard key={index} item={item} index={index} {...props} />\n      ))\n      }\n    </div>\n  )\n};\n\nexport default LeaderBoard","import React from 'react'\n\nconst FriendLink = ({setChallengeStep}) => {\n  const onCopyLink = (copy) => {\n    document.execCommand(copy)\n  }\n\n  return (\n    <div className=\"link h-100\">\n      <h1 className=\"link__title\">Défie un(e) ami(e) !</h1>\n\n      <p className=\"link__desc\">Testez vous sur 5 questions à propos des impacts de vos habitudes numériques.</p>\n\n      <p>Envoie ce lien à un proche pour pouvoir le défier.</p>\n\n      <div className=\"link__container\">\n        <p>https://cutt.ly/Cr4HqEV</p>\n        <button className=\"link__button\" onClick={() => onCopyLink('https://cutt.ly/Cr4HqEV')}><img width=\"19\" height=\"22\" src='./../assets/images/ic_copy.png' /></button>\n      </div>\n      <div className=\"share\"><button className=\"share__button\">Partager le lien</button></div>\n      <button className='challenge__button mt-auto' onClick={() => setChallengeStep(2)}>Commencez une partie</button>\n    </div>\n  )\n}\n\nexport default FriendLink\n\n","import React, { useEffect } from 'react'\nimport '../../assets/styles/quiz.css'\n\nconst FriendWaiting = ({setChallengeStep, randomUsername}) => {\n  useEffect(() => {\n    const timer = setTimeout(() => setChallengeStep(3), 3000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <div className='ta-c'>\n      <h1 className='player__name'>{randomUsername}</h1>\n      <p className='friend__text'>Vous venez d'inviter un proche</p>\n      <div className='circle'>\n        <img width='54' height='93' src='../assets/images/Sablier.png' />\n      </div>\n      <p className='friend__text'>Nous attendons que votre proche rejoigne le défi afin de lancer la partie…</p>\n    </div>\n  )\n}\n\nexport default FriendWaiting\n","import React from 'react'\n\nconst StartChallenge = ({setChallengeStep, randomUsername}) => {\n  return (\n    <div className='ta-c'>\n      <div className='player__name'>{randomUsername}</div>\n      <div className='friend__text'>Êtes-vous prêt(e) pour ce défi ?</div>\n      <div className='circle'>\n        <img width='132' height='111' src='../assets/images/logo.png' />\n      </div>\n      <div>\n        <div className='player__name'>AirPod solitaire</div>\n        <div className='friend__text'>vient de rejoindre la partie !</div>\n      </div>\n\n      <button className='challenge__button mt-8' onClick={() => setChallengeStep(4)}>C'est parti</button>\n\n    </div>\n  )\n}\n\nexport default StartChallenge","import React, { useState, useEffect } from 'react'\n\nconst Question = ({question, setQuestionStep, questionCount, friendUsername, setGoodAnswers, goodAnswers}) => {\n  const [selected, setSelected] = useState(null)\n  const [questionTimer, setQuestionTimer] = useState(5)\n  const [showAnswerTimer, setShowAnswerTimer] = useState(6)\n\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (questionTimer > 0) {\n        setQuestionTimer(questionTimer - 1)\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [questionTimer]);\n\n  useEffect(() => {\n    if (questionTimer === 0) {\n      const interval = setInterval(() => {\n        if (showAnswerTimer >= 0) {\n          setShowAnswerTimer(showAnswerTimer - 1)\n        }\n        if (showAnswerTimer === 0) {\n          setQuestionStep(question.step + 1)\n        }\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [showAnswerTimer, questionTimer]);\n\n  return (\n    <div>\n      <p className='question-step'>Question {question.step + 1} / {questionCount} </p>\n      <p className='question-title'>{question.text}</p>\n      <div className='stepper'>\n        <span className='stepper-line' style={{width: (5-questionTimer)*20 + '%'}} />\n      </div>\n      <div className='mt-3'>\n        {question.answers.map((answer, index) => (\n          <button \n          key={index}\n          className={selected === answer.text \n            ? questionTimer === 0 \n                ? answer.isTrue \n                    ? answer.hasFriendAnswered\n                          ? 'default-answer answer-selected answer-true friend-answer'\n                          : 'default-answer answer-selected answer-true'\n                    : answer.hasFriendAnswered\n                          ? 'default-answer answer-selected answer-false friend-answer'\n                          : 'default-answer answer-selected answer-false'\n                : 'default-answer answer-selected'\n            : questionTimer === 0\n              ? answer.isTrue\n                ? answer.hasFriendAnswered\n                  ? 'default-answer answer-was-true friend-answer'\n                  : 'default-answer answer-was-true'\n                : answer.hasFriendAnswered\n                  ? 'default-answer friend-answer'\n                  : 'default-answer' \n              : 'default-answer'\n            }\n             onClick={() => {\n                if (answer.isTrue) {\n                  setGoodAnswers(goodAnswers + 1)\n                }\n               setSelected(answer.text)\n             }}>\n            <p>{answer.text}</p>\n          </button>\n        ))}\n      </div>\n      {questionTimer === 0 && (\n        <div className='info'>\n          <div>\n            <img width={86} height={72} src='../assets/images/logo.png' />\n          </div>\n          <div className='info-content'>\n            {questionTimer === 0 && showAnswerTimer > 0 && <p className='answertimer'>{showAnswerTimer}</p>}\n            <div className='info-bravo'>Bravo !</div>\n            <div className='info-text'>Un tweet ne consomme que 0,02g de CO2</div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Question","import React, { useState, useEffect } from 'react'\nimport questionData from '../../data/questionData'\nimport Question from './Question'\nimport {Bar} from \"react-chartjs-2\";\n\nconst Results = ({goodAnswers, randomUsername, setChallengeStep, setDisplayHeader}) => {\n    let barData = {\n        labels: [],\n        datasets: [\n            {\n                label: 'My First dataset',\n                backgroundColor: goodAnswers < 2 ? \"#4B4A4A\" : \"#4CCE8D\",\n                borderWidth: 1,\n                data: [goodAnswers]\n            },\n            {\n                label: 'My First dataset',\n                backgroundColor: 2 < goodAnswers ? \"#4B4A4A\" : \"#4CCE8D\",\n                borderWidth: 1,\n                data: [2]\n            }\n        ]\n    };\n\n    return (\n        <>\n        <div className={\"result-title\"}>\n            Félicitations {goodAnswers > 2 ? randomUsername : \"AirPod solitaire\"}\n        </div>\n        <div>\n            <Bar\n                data={barData}\n                width={350}\n                height={200}\n                options={{\n                    defaultFontColor: \"#fff\",\n                    legend: {\n                        display: false,\n                        labels: {\n                            fontColor: \"white\",\n                            fontSize: 18\n                        }\n                    },\n                    tooltips: {\n                        enabled: false\n                    },\n                    scales: {\n                        xAxes: [{\n                            gridLines: {\n                                display:false\n                            },\n                        }],\n                        yAxes: [{\n                            gridLines: {\n                                display:false\n                            },\n                            ticks: {\n                                beginAtZero: true,\n                                min: 0,\n                                display: false\n                            }\n                        }]\n                    }\n                }}\n            />\n        </div>\n            <div className={\"d-flex justify-content-center\"}>\n                <div className={\"result-action\"}>\n                    {goodAnswers > 2\n                        ? <img width={26} height={26} src={\"../assets/images/ic_cup-color.png\"} />\n                        : <img width={23} height={22} src={\"../assets/images/finger-color.png\"} />\n                    }\n                    <div className={\"h-50\"}>{randomUsername}</div>\n                    <div className={\"d-flex align-items-center\"}>\n                        <div style={{ color: goodAnswers < 2 ? \"rgba(255,255,255,0.6)\" : \"white\"}} className={\"result-number\"}>{goodAnswers}</div>\n                        <div className={\"result-text\"}>Bonnes <br/>réponses</div>\n                    </div>\n                </div>\n                <div className={\"result-action\"}>\n                    {goodAnswers < 2\n                        ? <img width={26} height={26} src={\"../assets/images/ic_cup-color.png\"} />\n                        : <img width={23} height={22} src={\"../assets/images/finger-color.png\"} />\n                    }\n                    <div className={\"h-52\"}>AirPod solitaire</div>\n                    <div className={\"d-flex align-items-center\"}>\n                        <div style={{ color: goodAnswers > 2 ? \"rgba(255,255,255,0.6)\" : \"white\"}} className={\"result-number\"}>{2}</div>\n                        <div className={\"result-text\"}>Bonnes <br/>réponses</div>\n                    </div>\n                </div>\n            </div>\n            <button className='challenge__button mt-8' onClick={() => setChallengeStep(0)}>Recommencez une partie</button>\n            <button className={\"challenge__redirect mt-3 d-block m-auto\"}>Retour à l'accueil</button>\n            </>\n    )\n}\n\nexport default Results","import React, { useState, useEffect } from 'react'\nimport questionData from '../../data/questionData'\nimport Question from './Question'\nimport Results from \"./Results\";\n\nconst Quiz = ({setChallengeStep, setDisplayHeader, randomUsername}) => {\n  const [timer, setTimer] = useState(3)\n  const [questionStep, setQuestionStep] = useState(0)\n  const [goodAnswers, setGoodAnswers] = useState(0)\n\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (timer >= 0) {\n        setTimer(timer - 1)\n      }\n      if (timer === 0) {\n        setQuestionStep(0)\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [timer]);\n\n  return (\n    <div>\n      {timer > 0 && (\n        <div className='ta-c'>\n          <div className='circle'>\n            <div className='timer'>{timer}</div>\n          </div>\n          <div className='friend__text '>Le défi charge</div>\n        </div>\n      )}\n      {timer <= 0 && questionStep >= 0 && questionData.map((question, index) => {\n        if (question.step === questionStep) {\n          return <Question goodAnswers={goodAnswers} setGoodAnswers={setGoodAnswers} key={index} question={question} setQuestionStep={setQuestionStep} questionCount={questionData.length} />\n        }\n      })}\n      {questionStep > (questionData.length - 1) &&\n        <Results goodAnswers={goodAnswers} setDisplayHeader={setDisplayHeader} randomUsername={randomUsername} setChallengeStep={setChallengeStep}/>\n      }\n\n    </div>\n  )\n}\n\nexport default Quiz","import React, { useState, useEffect } from 'react'\nimport '../../assets/styles/challenge.css'\nimport FriendLink from './FriendLink'\nimport FriendWaiting from './FriendWaiting'\nimport StartChallenge from './StartChallenge'\nimport Quiz from './Quiz'\n\nconst Challenge = ({setDisplayHeader, randomUsername, setCurrentPage}) => {\n  const [challengeStep, setChallengeStep] = useState(4)\n\n  useEffect(() => {\n    setDisplayHeader(false)\n  })\n\n  const onChallengeStart = (stepNumber) => {\n    if (stepNumber > 1) {\n      setDisplayHeader(false)\n    }\n    setChallengeStep(stepNumber)\n    \n  }\n\n  return (\n    <div className='challenge'>\n      {challengeStep === 0 && (\n        <>\n          <h1 className=\"challenge__title\">Tous les défis</h1>\n          <div className='challenge__section'>\n            <h2 className='challenge__subtitle'>Défie un(e) ami(e) !</h2>\n            <p className='challenge__text'>Vous allez pouvoir vous défier grâce à 5 questions du numérique.</p>\n            <button className='challenge__button' onClick={() => onChallengeStart(1)}>\n              J'invite un(e) ami(e)\n            </button>\n          </div>\n          <div className='challenge__section'>\n            <h2 className='challenge__subtitle'>Personne à défier ?</h2>\n            <p className='challenge__text'>Joue contre toi-même pour apprendre plus de bonnes pratiques.</p>\n            <button className='challenge__button' onClick={() => onChallengeStart(3)}>\n              Je joue solo\n            </button>\n          </div>\n          <div className=\"challenge__bottom\">\n            <button className=\"challenge__redirect\" onClick={() => setCurrentPage(0)}>Retourner au comparateur</button>\n          </div>\n        </>\n      )}\n      {challengeStep === 1 && (\n        <FriendLink setChallengeStep={onChallengeStart} setCurrentPage={setCurrentPage} setDisplayHeader={setDisplayHeader} />\n      )}\n      {challengeStep === 2 && (\n        <FriendWaiting setChallengeStep={setChallengeStep} randomUsername={randomUsername}/>\n      )}\n      {challengeStep === 3 && (\n        <StartChallenge setChallengeStep={setChallengeStep} randomUsername={randomUsername}/>\n      )}\n      {challengeStep === 4 && (\n        <Quiz setDisplayHeader={setDisplayHeader} setChallengeStep={setChallengeStep} randomUsername={randomUsername}/>\n      )}\n    </div>\n  )\n}\n\nexport default Challenge\n","import React, {useState} from 'react';\nimport './App.css';\nimport Navigation from \"./components/Navigation\";\nimport SearchPage from \"./page/SearchPage\";\nimport LeaderBoard from './page/LeaderBoard';\nimport Challenge from './page/challenge/Challenge'\n\nconst names = [\n    'Nokia 3310',\n    'Fibre optique',\n    'Batterie au lithium',\n    \"Disque dur externe\"\n];\n\nfunction App() {\n    const [currentPage, setCurrentPage] = useState(0);\n    const [displayHeader, setDisplayHeader] = useState(true)\n    const [firstOption, setFirstOption] = useState(null);\n    const [firstOptionSelection, setFirstOptionSelection] = useState(false);\n    const [secondOptionSelection, setSecondOptionSelection] = useState(false);\n    const [secondOption, setSecondOption] = useState(null);\n    const [search, setSearch] = useState(false);\n    const [onBoarding, setOnBoarding] = React.useState(false);\n    const [randomUsername, setRandomUsername] = React.useState(names[Math.floor(Math.random()*names.length)]);\n\n    return (\n        <div className={\"app-container\"}>\n            {currentPage === 0 &&\n              <SearchPage\n                setFirstOption={setFirstOption}\n                setSecondOption={setSecondOption}\n                setCurrentPage={setCurrentPage}\n                setOnBoarding={setOnBoarding}\n                onBoarding={onBoarding}\n                search={search}\n                firstOption={firstOption}\n                secondOption={secondOption}\n                setSearch={setSearch}\n                firstOptionSelection={firstOptionSelection}\n                secondOptionSelection={secondOptionSelection}\n                setFirstOptionSelection={setFirstOptionSelection}\n                setSecondOptionSelection={setSecondOptionSelection}\n              />\n            }\n            {currentPage === 1 &&\n            <LeaderBoard\n                setCurrentPage={setCurrentPage}\n                setSearch={setSearch}\n                setFirstOption={setFirstOption}\n                setSecondOption={setSecondOption}\n            />\n            }\n            {currentPage === 2 &&\n              <Challenge\n                  setDisplayHeader={setDisplayHeader}\n                  randomUsername={randomUsername}\n              />\n            }\n            {displayHeader && (\n              <Navigation\n                  setCurrentPage={setCurrentPage}\n                  setSearch={setSearch}\n              />\n            )}\n            {!displayHeader && (\n              <div className='leave' >\n                <button className='leave__button' onClick={() => {\n                  setDisplayHeader(true)\n                  setCurrentPage(0)\n                }}>\n                  Quitter le défi\n                </button>\n              </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}